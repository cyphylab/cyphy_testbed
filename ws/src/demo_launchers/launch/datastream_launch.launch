<?xml version="1.0"?>
<launch>
        <arg name="vehicle_frame" default="cf1" />
        <arg name="ip" default="192.168.1.198" />
        <arg name="port" default="3883" />
<!--
============================================================================
Run vrpn client
This connects to the optitrack server and produces pose messages regarding 
the CF.
-->
<node 
    pkg="vrpn_client_ros"
    type="vrpn_client_node" 
    name="vrpn_client_node"
    output="screen"
    required="true">
        <rosparam subst_value="true">
                server: $(arg ip)
                port: $(arg port)
                update_frequency: 500.0
                frame_id: /world
                child_frame_id: $(arg vehicle_frame)
                use_server_time: true
                broadcast_tf: false
                refresh_tracker_frequency: 1.0
        </rosparam>
</node>


<!-- VEHICLE 1 -->
<group ns="$(arg vehicle_frame)">

<!--
===========================================================================
Run the data aggregator node, which takes the information from external 
sensors and provides an estimator of the drone state.
-->
<node pkg="state_aggregator" name="aggregator" type="state_aggregator" 
        output="screen"> 
        <!-- Topic parameters -->
        <param name="topics/in_vrpn_topic" value="/vrpn_client_node/cf1/pose" />
        <param name="topics/out_ext_position_topic" value="external_position" />
        <param name="topics/out_ext_pose_topic" value="external_pose" />
        <param name="topics/out_ext_pose_rpy_topic" value="external_pose_rpy" />
        <param name="topics/out_ext_odom_topic" value="external_odom" />
	<param name="topics/out_ext_codom_topic" value="external_codom" />

        <param name="valpha" value="0.9" type='double' />
        <param name="filt_order" value="2" type="int" />
        <param name="qdalpha" value="0.9" type='double' />
    	<param name="time_delay" value="0.0" type='double' />
</node>
</group>


<!--
============================================================================
Visualization with RVIZ 
-->
<node pkg="tf" type="static_transform_publisher" name="baselink_broadcaster" args="0 0 0 0 0 0 1 $(arg vehicle_frame) /world 100" />
<node pkg="rviz" type="rviz" name="rviz" args="-d $(find state_aggregator)/launch/cyphy_rviz.rviz" /> 

<!--
============================================================================
Bag recording 
- /vrpn_client_node/cf1/pose: This is the raw ground truth
- /ghost_trajectory: This is the requested trajectory pose (simulated)
- /cf1/external_odom: External Odometry from the state aggregator
- /cf1/external_pose_rpy: External RPY angles from the state aggregator
-->
<node pkg="rosbag" name="record_ext" type="record" args="-O /tmp/cf1_ext /vrpn_client_node/cf1/pose /cf1/external_odom /cf1/external_codom /cf1/external_pose /cf1/external_pose_rpy"/>
</launch>

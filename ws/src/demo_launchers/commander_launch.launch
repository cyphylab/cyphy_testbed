<?xml version="1.0"?>
<launch>
	<arg name="tg_frame" default="cf1" /> <!-- Identify the frame to be controlled --> 
	<arg name="commander_id" default="cm1" />  <!-- Useful to identify the source of the commands -->
<!-- 
    This launcher sets up the nodes to send commands to the vehicle.
-->

<group ns="$(arg commander_id)">
    <!--
    ============================================================================
    Trajectory Generation Service
    -->
    <node name="Guidance_Node" pkg="command_interface" type="guidance.py" output="screen"> 
	    <param name="target_frame" value="$(arg tg_frame)" type='str' />
	    <param name="command_id" value="$(arg commander_id)" type='str' />
    </node>
</group>

<group ns="$(arg tg_frame)">
	<!-- 
	===========================================================================
	Run the node publishing the setpoint value as odometry message which can be visualized in
	rviz
	-->
	<node name="ctrlsetpoint_odometry_pub" pkg='monitors' type="ctrl_setpoint_odometry_publisher" output="screen">
		<param name="tg_frame_id" value="$(arg tg_frame)" type='str' />
		<param name="commander_id" value="$(arg commander_id)" type='str' />
	</node>	
</group>

<!--
============================================================================
Bag recording 

- /setpoint: Trajectory setpoint for the crazyflie 
-->
<node pkg="rosbag" name="record" type="record" args="-O /tmp/$(arg commander_id)_$(arg tg_frame)_cmd /$(arg commander_id)/$(arg tg_frame)/setpoint"/>
</launch>

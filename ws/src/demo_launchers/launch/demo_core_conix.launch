<?xml version="1.0"?>
<!--
    Global Launch File to start the system.
    The following nodes will be started:
     - VRPN Client Node
     - Estimator Nodes for the drones
     - Arena Node
     - Commander + Guidance Nodes
-->
<launch>
<!--
    <arg name="vehicle_frame" default="cf3" />
    <arg name="uri" default="radio://0/80/2M/E7E7E7E703" />
    <arg name="vehicle_frame" default="cf1" />
    <arg name="uri" default="radio://0/121/2M/E7E7E7E7E7" />
-->
    <arg name="vehicle_frame" default="cf2" />
    <arg name="uri" default="radio://0/100/2M/E7E7E7E702" />

    <arg name="target" default="target" />
    <arg name="nodeB" default="nodeB" />
    <arg name="ip" default="192.168.1.198" />
    <arg name="port" default="3883" />

    <arg name="server" default="RS2" />
    <arg name="provide_position" default="True" />
    <arg name="provide_distance" default="False" />
    <arg name="provide_pose" default="False" />


<!-- ===================================== -->
<!-- Launch the data aquisition component 
     Source of raw pose data: VRPN Server 
     -->
<include file="$(find demo_launchers)/launch/vrpn_launch.launch">
    <arg name="ip" value="$(arg ip)" />
    <arg name="port" value="$(arg port)" />
</include>


<!-- ===================================== -->
<!-- Launch the estimator of the object state from
     the VRPN raw data.
     -->
<include file="$(find demo_launchers)/launch/estimator_launch.launch">
    <arg name="vehicle_frame" value="$(arg vehicle_frame)" />
</include>


<!-- ===================================== -->
<!-- Launch the Arena Node
<include file="$(find demo_launchers)/launch/arena.launch">
</include>
-->

<!-- ======================================== -->
<!-- Launch the controller/guidance componets -->
<include file="$(find demo_launchers)/launch/commander_launch.launch">
    <arg name="vehicle_frame" value="$(arg vehicle_frame)" />
    <arg name="commander_id" value="cm3" />
    <arg name="obst_frame" value="cf2" />
</include>


<include file="$(find demo_launchers)/launch/radio_server.launch">
    <arg name="rs_name" value="$(arg server)" />
</include>


<include file="$(find demo_launchers)/launch/cf_bridge.launch">
    <arg name="uri" value="$(arg uri)" />
    <arg name="frame" value="$(arg vehicle_frame)" />
    <arg name="server" value="$(arg server)" />
    <arg name="provide_position" value="$(arg provide_position)" />
    <arg name="provide_distance" value="$(arg provide_distance)" />
    <arg name="provide_pose" value="$(arg provide_pose)" />
    <arg name="controller_type" value="Mellinger" />
    <arg name="estimator_type" value="EKF" />
</include>


<!--
    ===================================================
    Control Router 
-->
    <node name="control_router"
        pkg="control_router"
        type="control_router_node"
        output="screen">
        <param name="param/vehicle_name" value="$(arg vehicle_frame)" />
    </node>

    <node name="datadriver_controller"
        pkg="dd_controller"
        type="dd_controller"
        output="screen">
        <param name="param/controller_name" value="DD_ctrl1" />
        <param name="param/vehicle_name" value="$(arg vehicle_frame)" />
        <param name="topics/out_motors_topic" value="/area0/controller/DD_ctrl1/$(arg vehicle_frame)/cmd_pwm"/>
        <rosparam file="$(find dd_controller)/config/dd_controller_params.yaml" />
    </node>

    <node name="datadriver_controller2"
        pkg="dd_controller"
        type="dd_controller"
        output="screen">
        <param name="param/controller_name" value="DD_ctrl2"/>
        <param name="param/vehicle_name" value="$(arg vehicle_frame)" />
        <param name="param/drop_mod" value="2" />
        <param name="topics/out_motors_topic" value="/area0/controller/DD_ctrl2/$(arg vehicle_frame)/cmd_pwm"/>
        <rosparam file="$(find dd_controller)/config/dd_controller_params.yaml" />
    </node>

        <!-- GEOMETRIC EXTERNAL CONTROLLERS -->
    <!-- I would like to remove these namespace in the future and do
         everything with the topic names
    <group ns="$(arg vehicle_frame)"> 
        <include file="$(find demo_launchers)/launch/ext_control.launch">
            <arg name="topics/setpoint_topic" value="/$(arg vehicle_frame)/setpoint" />
            <arg name="topics/control_topic" value="/area0/controller/geometric_ctrl/$(arg vehicle_frame)/control" />
            <arg name="topics/ctrl_perf_topic" value="/$(arg vehicle_frame)/ctrl_perf" />
            <arg name="topics/state_topic" value="/$(arg vehicle_frame)/external_codom" />
            <arg name="param/vehicle_name" value="$(arg vehicle_frame)" />
            <arg name="control_mode" value="ANGLES" />
        </include>

        <include file="$(find demo_launchers)/launch/ext_control2.launch">
            <arg name="topics/setpoint_topic" value="/$(arg vehicle_frame)/setpoint" />
            <arg name="topics/control_topic" value="/area0/controller/geometric_ctrl2/$(arg vehicle_frame)/control" />
            <arg name="topics/ctrl_perf_topic" value="/$(arg vehicle_frame)/ctrl_perf" />
            <arg name="topics/state_topic" value="/$(arg vehicle_frame)/external_codom" />
            <arg name="param/vehicle_name" value="$(arg vehicle_frame)" />
            <arg name="control_mode" value="ANGLES" />
        </include>


        <node name="cmd_vel_converter"
            pkg="controller"
            type="cmd_vel_converter_node"
            output="screen">
            <param name="topics/control" value="/$(arg vehicle_frame)/control" />
            <param name="topics/cmd_vel" value="/$(arg vehicle_frame)/cmd_vel" />
        </node>
    </group>

    -->


<node pkg="rosbag" name="dd_$(arg vehicle_frame)" type="record" args="-O /tmp/$(arg vehicle_frame)_ddctrl  /$(arg vehicle_frame)/cmd_pwm  /area0/controller/DD_ctrl1/$(arg vehicle_frame)/cmd_pwm /area0/controller/DD_ctrl2/$(arg vehicle_frame)/cmd_pwm /DD_ctrl1/$(arg vehicle_frame)/dd_perf /DD_ctrl1/$(arg vehicle_frame)/dd_estimate /DD_ctrl2/$(arg vehicle_frame)/dd_estimate /DD_ctrl1/$(arg vehicle_frame)/dd_param_estimate /DD_ctrl2/$(arg vehicle_frame)/dd_param_estimate /$(arg vehicle_frame)/setpoint "/>

<node pkg="rosbag" name="record_$(arg vehicle_frame)" type="record" args="-O /tmp/$(arg vehicle_frame)_crazyflie /$(arg vehicle_frame)/external_codom /$(arg vehicle_frame)/extPwm /$(arg vehicle_frame)/ddCtrl /$(arg vehicle_frame)/phat /$(arg vehicle_frame)/network"/>

<!--
<node pkg="rosbag" name="mocap_$(arg vehicle_frame)" type="record" args="-O /tmp/$(arg vehicle_frame)_mocap  /$(arg vehicle_frame)/external_codom /$(arg vehicle_frame)/external_pose_rpy /area0/sensors/optitrack/$(arg vehicle_frame)/data"/>
-->

</launch>



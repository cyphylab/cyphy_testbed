<?xml version="1.0"?>
<!-- 
    This launcher sets up the nodes to send commands to the vehicle.
-->
<launch>
    <arg name="vehicle_frame" default="cf2" />
    <arg name="commander_id" default="cm1" />  
    <arg name="obst_frame" default="cf3" />

    <group ns="$(arg vehicle_frame)"> 
    <!--
    ========================================
    Trajectory Generation Service
    -->
    <node name="Guidance_Node" 
        pkg="guidance" 
        type="guidance_node.py" 
        output="screen"
        respawn="true"
        respawn_delay="3"> 
        <param name="target_frame" value="$(arg vehicle_frame)" type='str' />
        <param name="topics/in_tg_pose_topic" value="target" type="str" />
        <param name="topics/in_vehicle_odom_topic" value="external_codom" type='str' />
        <param name="topics/in_obst_pose_topic" value="$(arg obst_frame)" type='str'/>
        <param name="topics/out_ctrl_setpoint" value="setpoint" type="str" />
    </node>

    <!--
    ========================================
    Commander Node
    -->
    <node name="Commander_Node" pkg="commander_interface" type="commander" output="screen">
        <param name="param/vehicle_name" value="$(arg vehicle_frame)" type="str"/>
    </node>


    <!-- 
    ========================================
    Run the node publishing the setpoint value as odometry message which can be visualized in
    rviz
    -->
    <!--
    <node name="ctrlsetpoint_odometry_pub" pkg='monitors' type="ctrl_setpoint_odometry_publisher" output="screen">
        <param name="tg_frame_id" value="$(arg vehicle_frame)" type='str' />
        <param name="topics/out_ghost_topic" value="ghost_odom" type="str" />
        <param name="topics/in_ctrlsetpoint_topic" value="setpoint" type="str" />
    </node>	
    -->



</group>
<!--
========================================
Bag recording 

- /setpoint: Trajectory setpoint for the crazyflie 
-->

</launch>
